/*
 * Callback Server for Workflow Server API
 *
 * Describes CallbackApi, a set of methods that will be called by the WFS, to execute external Actions, Conditions and Rules.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: sales@optimajet.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class DefaultApiController : Controller
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Executes the naming rule on the callback server</remarks>
        /// <param name="executeParameters"></param>
        /// <response code="200">Rule check result</response>
        [HttpPost]
        [Route("/callbackapi/checkrule")]
        [ValidateModelState]
        [SwaggerOperation("CheckRule")]
        [SwaggerResponse(statusCode: 200, type: typeof(BooleanExecutionResult), description: "Rule check result")]
        public virtual IActionResult CheckRule([FromBody]ExecuteParameters executeParameters)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BooleanExecutionResult));

            string exampleJson = null;
            exampleJson = "\"\"";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BooleanExecutionResult>(exampleJson)
            : default(BooleanExecutionResult);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Executes the naming action on the callback server</remarks>
        /// <param name="executeParameters"></param>
        /// <response code="200">Excecution result with new process parameters</response>
        [HttpPost]
        [Route("/callbackapi/executeaction")]
        [ValidateModelState]
        [SwaggerOperation("ExecuteAction")]
        [SwaggerResponse(statusCode: 200, type: typeof(ActionExecutionResult), description: "Excecution result with new process parameters")]
        public virtual IActionResult ExecuteAction([FromBody]ExecuteParameters executeParameters)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ActionExecutionResult));

            string exampleJson = null;
            exampleJson = "\"\"";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ActionExecutionResult>(exampleJson)
            : default(ActionExecutionResult);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Executes the naming condition on the callback server</remarks>
        /// <param name="executeParameters"></param>
        /// <response code="200">Condition result</response>
        [HttpPost]
        [Route("/callbackapi/executecondition")]
        [ValidateModelState]
        [SwaggerOperation("ExecuteCondition")]
        [SwaggerResponse(statusCode: 200, type: typeof(BooleanExecutionResult), description: "Condition result")]
        public virtual IActionResult ExecuteCondition([FromBody]ExecuteParameters executeParameters)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(BooleanExecutionResult));

            string exampleJson = null;
            exampleJson = "\"\"";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<BooleanExecutionResult>(exampleJson)
            : default(BooleanExecutionResult);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>External scheme generator method</remarks>
        /// <param name="generateParameters"></param>
        /// <response code="200">New generated scheme</response>
        [HttpPost]
        [Route("/callbackapi/generate")]
        [ValidateModelState]
        [SwaggerOperation("Generate")]
        [SwaggerResponse(statusCode: 200, type: typeof(StringOperationResult), description: "New generated scheme")]
        public virtual IActionResult Generate([FromBody]GeneratorParameters generateParameters)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(StringOperationResult));

            string exampleJson = null;
            exampleJson = "\"\"";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<StringOperationResult>(exampleJson)
            : default(StringOperationResult);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Returns the list of Actions that can be called on this server</remarks>
        /// <response code="200">List of actions</response>
        [HttpGet]
        [Route("/callbackapi/getactions")]
        [ValidateModelState]
        [SwaggerOperation("GetActions")]
        [SwaggerResponse(statusCode: 200, type: typeof(ListOfStringsOperationResult), description: "List of actions")]
        public virtual IActionResult GetActions()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ListOfStringsOperationResult));

            string exampleJson = null;
            exampleJson = "\"\"";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ListOfStringsOperationResult>(exampleJson)
            : default(ListOfStringsOperationResult);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Returns the list of Conditions that can be checked by this server</remarks>
        /// <response code="200">List of conditions</response>
        [HttpGet]
        [Route("/callbackapi/getconditions")]
        [ValidateModelState]
        [SwaggerOperation("GetConditions")]
        [SwaggerResponse(statusCode: 200, type: typeof(ListOfStringsOperationResult), description: "List of conditions")]
        public virtual IActionResult GetConditions()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ListOfStringsOperationResult));

            string exampleJson = null;
            exampleJson = "\"\"";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ListOfStringsOperationResult>(exampleJson)
            : default(ListOfStringsOperationResult);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Executes the naming rule on the callback server, returns user ids thats satisfy this rule</remarks>
        /// <param name="executeParameters"></param>
        /// <response code="200">Rule get result</response>
        [HttpPost]
        [Route("/callbackapi/getidentities")]
        [ValidateModelState]
        [SwaggerOperation("GetIdentities")]
        [SwaggerResponse(statusCode: 200, type: typeof(ListOfStringsOperationResult), description: "Rule get result")]
        public virtual IActionResult GetIdentities([FromBody]ExecuteParameters executeParameters)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ListOfStringsOperationResult));

            string exampleJson = null;
            exampleJson = "\"\"";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ListOfStringsOperationResult>(exampleJson)
            : default(ListOfStringsOperationResult);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Returns the list of Rules that can be checked by this server</remarks>
        /// <response code="200">List of rules</response>
        [HttpGet]
        [Route("/callbackapi/getrules")]
        [ValidateModelState]
        [SwaggerOperation("GetRules")]
        [SwaggerResponse(statusCode: 200, type: typeof(ListOfStringsOperationResult), description: "List of rules")]
        public virtual IActionResult GetRules()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ListOfStringsOperationResult));

            string exampleJson = null;
            exampleJson = "\"\"";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ListOfStringsOperationResult>(exampleJson)
            : default(ListOfStringsOperationResult);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>External event handler for ProcessStatusChanged event</remarks>
        /// <param name="processStatusChangedParameters"></param>
        /// <response code="200">OperationResult</response>
        [HttpPost]
        [Route("/callbackapi/processstatuschanged")]
        [ValidateModelState]
        [SwaggerOperation("ProcessStatusChanged")]
        [SwaggerResponse(statusCode: 200, type: typeof(OperationResult), description: "OperationResult")]
        public virtual IActionResult ProcessStatusChanged([FromBody]ProcessStatusChangedParameters processStatusChangedParameters)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(OperationResult));

            string exampleJson = null;
            exampleJson = "{\n  \"success\" : true,\n  \"error\" : \"error\",\n  \"message\" : \"message\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<OperationResult>(exampleJson)
            : default(OperationResult);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
